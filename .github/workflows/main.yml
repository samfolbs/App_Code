# This workflow will buid a java project with Maven and update manifest  

name: Java CI with Maven 

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4
    
      - name: Maven test
        run: mvn test
    
      - name: Checkstyle
        run: mvn checkstyle:checkstyle
   
  # Setup java 11 to be default (sonar-scanner requirement as of 5.x)
      - name: Set Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'
    
     # Setup sonar-scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7
       
     # Run sonar-scanner
      - name: SonarQube Scan
        run: sonar-scanner
           -Dsonar.host.url=${{ secrets.SONAR_URL }}
           -Dsonar.login=${{ secrets.SONAR_TOKEN }}
           -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
           -Dsonar.sources=src/
           -Dsonar.junit.reportsPath=target/surefire-reports/ 
           -Dsonar.jacoco.reportsPath=target/jacoco.exec 
           -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
           -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/
    
    # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }} #OPTIONAL 
    
  Build_App_Image:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build and push database Docker image
        working-directory: ./app
        run:
          docker build . -t ${{ secret.DOCKER_USERNAME }}/vprofileApp:latest
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/vprofileApp:latest
  
  Build_Database_Image:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build and push database Docker image
        working-directory: ./db
        run:
          docker build . -t ${{ secret.DOCKER_USERNAME }}/vprofiledb:latest
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/vprofiledb:latest
  
  Build_web_Image:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build and push database Docker image
        working-directory: ./web
        run:
          docker build . -t ${{ secret.DOCKER_USERNAME }}/vprofileweb:latest
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/vprofileweb:latest
    
  Update_manifest_files:
    needs: [Build_App_Image, Build_Database_Image, Build_web_Image]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: https://github.com/samfolbs/K8S_Deployment_Manifest.git
          ref: main
          token: ${{secrets.GITHUB_PERSONAL_TOKEN}}
      - name: setup git config
        run: |
          git config --global user.email "${{ secrets.USER_EMAIL }}"
          git config --global user.name "${{ secrets.USER_NAME }}"
          echo ${{ github.sam }}

          # Update App Image in deployment Manifest
          sed -i "s#${{ secrets.DOCKER_USERNAME }}.*#${{ secrets.DOCKER_USERNAME }}/vprofileapp:latest#g"8S_Deployment_Manifest/appdeploy.yaml

          # Update DB Image in deployment Manifest
          sed -i "s#${{ secrets.DOCKER_USERNAME }}.*#${{ secrets.DOCKER_USERNAME }}/vprofiledb:latest#g"8S_Deployment_Manifest/dbdeployment.yaml

          git add -A
          git commit -am "Update image for -${{ github.sam }} [skip ci]"
      - run: echo "${{ github }}"  
      - run: git push origin main

